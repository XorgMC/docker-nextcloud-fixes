name: test

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - 'master'
    paths-ignore:
      - '**.md'

env:
  BUILD_TAG: test
  CONTAINER_NAME: nextcloud

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        docker_file:
          - Dockerfile-25
          - Dockerfile-26
          - Dockerfile-27
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Docker Build
        uses: docker/bake-action@v3
        with:
          targets: image-local
        env:
          DEFAULT_TAG: ${{ env.BUILD_TAG }}
          DOCKERFILE: ${{ matrix.docker_file }}
      -
        name: Create network
        run: |
          docker network create -d bridge ${{ env.CONTAINER_NAME }}
      -
        name: Start MariaDB container
        run: |
          docker run -d --name mariadb --hostname mariadb \
            --network ${{ env.CONTAINER_NAME }} \
            -e "MYSQL_ALLOW_EMPTY_PASSWORD=yes" \
            -e "MYSQL_DATABASE=nextcloud" \
            -e "MYSQL_USER=nextcloud" \
            -e "MYSQL_PASSWORD=asupersecretpassword" \
            mariadb:10.5
      -
        name: Start container
        run: |
          docker run -d --name ${{ env.CONTAINER_NAME }} \
            --link mariadb \
            --network ${{ env.CONTAINER_NAME }} \
            -e "DB_TYPE=mysql" \
            -e "DB_HOST=mariadb" \
            -e "DB_NAME=nextcloud" \
            -e "DB_USER=nextcloud" \
            -e "DB_PASSWORD=asupersecretpassword" \
            ${{ env.BUILD_TAG }}
      -
        name: Check container logs
        uses: crazy-max/.github/.github/actions/container-logs-check@main
        with:
          container_name: ${{ env.CONTAINER_NAME }}
          log_check: "ready to handle connections"
      -
        name: Container logs
        if: always()
        run: |
          docker logs ${{ env.CONTAINER_NAME }}
          docker rm -f ${{ env.CONTAINER_NAME }} > /dev/null 2>&1 || true
